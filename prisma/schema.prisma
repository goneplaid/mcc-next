generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ContestantStatus {
  ACTIVE
  ELIMINATED
  RUNNER_UP
  WINNER
}

enum ChallengeResult {
  WIN
  HIGH
  IN
  LOW
  ELIM
}

enum ChallengeType {
  A // Audition
  ST // Skill test
  MB // Mystery box
  ET // Elimination test
  TC // Team Challenge
  PT // Pressure test
  I // Individual test
  SF // Semi-final
  F // Final
  OSC // Off-site challenge (unique)
}

model Season {
  id           String        @id @default(uuid())
  seasonNumber Int           @unique
  name         String        @unique @db.VarChar(9)
  year         Int
  episodes     Episode[]
  contestants  Contestant[]
  judges       Judge[]
  challenges   Challenge[]
  participants Participant[]
}

model Episode {
  id            String       @id @default(uuid())
  episodeNumber Int
  description   String       @db.VarChar(255)
  airDate       DateTime
  notes         String       @db.Text
  seasonId      String
  season        Season       @relation(fields: [seasonId], references: [id])
  contestants   Contestant[]
  judges        Judge[]
  challenges    Challenge[]

  @@unique([episodeNumber, seasonId])
}

model Judge {
  id       String    @id @default(uuid())
  name     String    @unique @db.VarChar(150)
  seasons  Season[]
  episodes Episode[]
}

model ContestantProfile {
  id         String       @id @default(uuid())
  name       String       @unique @db.VarChar(150)
  age        Int          @default(1)
  hometown   String       @db.VarChar(255)
  occupation String       @db.VarChar(255)
  contests   Contestant[]
}

model Contestant {
  id             String            @id @default(uuid())
  status         ContestantStatus  @default(ELIMINATED)
  place          Int               @default(0)
  finalEpisode   Int
  seasonId       String
  season         Season            @relation(fields: [seasonId], references: [id])
  profileId      String
  profile        ContestantProfile @relation(fields: [profileId], references: [id])
  episodes       Episode[]
  participations Participant[]
}

model Challenge {
  id           String        @id @default(uuid())
  type         ChallengeType
  duration     Int
  seasonId     String
  season       Season        @relation(fields: [seasonId], references: [id])
  episodeId    String
  episode      Episode       @relation(fields: [episodeId], references: [id])
  participants Participant[]
}

model Participant {
  id           String          @id @default(uuid())
  team         String
  seasonId     String
  season       Season          @relation(fields: [seasonId], references: [id])
  challengeId  String
  challenge    Challenge       @relation(fields: [challengeId], references: [id])
  contestantId String
  contestant   Contestant      @relation(fields: [contestantId], references: [id])
  result       ChallengeResult
}
